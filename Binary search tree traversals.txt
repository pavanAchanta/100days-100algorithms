#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
struct node
{
    struct node*left;
    int key;
    struct node*right;
};
struct node *newNode(int item) 
{ 
    struct node *temp =  (struct node *)malloc(sizeof(struct node)); 
    temp->key = item; 
    temp->left = temp->right = NULL; 
    return temp; 
};
struct node* insert(struct node* node, int key) 
{ 
    if (node == NULL) return newNode(key); 
    if (key<=node->key) 
        node->left  = insert(node->left, key); 
    else if (key > node->key) 
        node->right = insert(node->right, key);    
    return node; 
}
void preorder(struct node *root)
{
    if(root)
    {
        printf("%d ",root->key);
        preorder(root->left);
        preorder(root->right);
    }
}
void inorder(struct node *root)
{
    if(root)
    {
        inorder(root->left);
        printf("%d ",root->key);
        inorder(root->right);
    }
}
void postorder(struct node *root)
{
    if(root)
    {
        postorder(root->left);
        postorder(root->right);
        printf("%d ",root->key);
    }
}
int main()
{
    int n;
    scanf("%d",&n);
    int a[n];
    struct node *root=NULL;
    for(int i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
        root=insert(root,a[i]);
        int siva=0;
    }
    preorder(root);
    printf("\n");
    inorder(root);
    printf("\n");
    postorder(root);
    return 0;
}

