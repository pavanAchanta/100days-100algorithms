/*Imagine the field is a 2D plane. Each cell is either water 'W' or a tree 'T'. 
A forest is a collection of connected trees. Two trees are connected if they share a side i.e. if they are adjacent to each other.

Your task is, given the information about the field, print the size of the largest forest.

Size of a forest is the number of trees in it. See the sample case for clarity

Input
First line contains the size of the matrix N. 
The next N lines contain N characters each, either 'W' or 'T'.

Output
Print the size of the biggest forest.
*/



#include<bits/stdc++.h>
using namespace std;
char s[1005][1005];
int n,c=0;
void count(int i,int j)
{
if(i<0 || j<0 || i>=n || j>=n)
return ;
if(s[i][j]=='T')
{
c++;
s[i][j]='W';
count(i-1,j);
count(i,j-1);
count(i+1,j);
count(i,j+1);
}
}
int main()
{
int x=0;
cin>>n;
for(int i=0;i<n;i++)
for(int j=0;j<n;j++)
cin>>s[i][j];
for(int i=0;i<n;i++)
{
for(int j=0;j<n;j++)
{
if(s[i][j]=='T')
{
count(i,j);
if(c>x)
x=c;
c=0;
}
}
}
cout<<x;
}

sample i/p:
5
TTTWW
TWWTT
TWWTT
TWTTT
WWTTT
o/p:
10
