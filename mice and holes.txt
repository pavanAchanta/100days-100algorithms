/*
There are N Mice and N holes are placed in a straight line.

Each hole can accomodate only 1 mouse.

A mouse can stay at his position, move one step right from x to x + 1, or move one step left from x to x - 1. Any of these moves consumes 1 minute.

Assign mice to holes so that the time when the last mouse gets inside a hole is minimized.

Input Format

First line contains the integer N. Next line contains N integers, the position of the mice.
Third line contains N integers, the position of the holes.

Constraints

1 <= N <= 105

Output Format

Output one number corresponding to the minimum number of minutes it will take for the last mice to go into the hole.

Sample Input 0

3
4 -4 2
4 0 5
Sample Output 0

4
*/



#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int cmp(int *x,int *y)
{
    return *x-*y;
}
int main() {
    int n;
    scanf("%d",&n);
    int a[n];
    int b[n];
    for(int i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    for(int j=0;j<n;j++)
    {
        scanf("%d",&b[j]);
    }
    qsort(a,n,sizeof(int),cmp);
    qsort(b,n,sizeof(int),cmp);
    int max=abs(a[0]-b[0]);
    for(int i=1;i<n;i++)
    {
        int c=abs(a[i]-b[i]);
        if(c>max)
        {
            max=c;
        }
    }
    printf("%d",max);
    return 0;
}
